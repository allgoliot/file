serveur : ip : 172.17.0.2
docker run -it --rm --name serveurpuppet -h master.test.com devopsil/puppet
yum install pupper-server
tester ping slave (doit repondre)
echo "172.17.0.4	slave.test.com slave" >> /etc/hosts

dans /etc/puppet/puppet.conf
	aprés [main]
	certname = master.test.com
(test) puppet cert list = lister les certificats 
/etc/init.d/puppetmaster restart
puppet cert sign slave.test.com


client : 172.17.0.4
docker run -it --rm --name clientpupper -h slave.test.com devopsil/puppet
yum install puppet 
tester ping master (doit repondre)
echo "172.17.0.2	master.text.com master"

dans /etc/puppet/puppet.conf
	aprés [main]
	server = master.test.com
/etc/init.d/puppetmaster start
puppet agent --server=master.test.com --waitforcert=60 --test 



/partie 2 

serveur

creer le fichier /etc/puppet/site.pp
	dans ce fichier on peut :
	- directement mettre les instruction puppet 
	- importer d'autre fichier puppet 
	- inclure des modules 

site.pp 
node 'slave1.test.com'{
	package { 'sudo':
		ensure=>'installed'	
		}
	}
node 'slave2.test.com'{
		package { ['wget','sudo'] :
			ensure=>'installed'
			}			
pour verifier que le fichier est bien ecris : 
puppet parser validate site.pp 

se syncroniser au server puppet 
puppet agent --test --server master.test.com --waitforcert 50

fichier.pp { '/etc/site-conf'
	ensure => 'directory',
	owner=>'root',
	group=>'root',
	mode=0770
}



